description = "Gradle plugin to find duplicate code using PMDs copy/paste detection (= CPD)"
group = "de.aaschmid"
version = "3.2-SNAPSHOT"

ext {
    isBuildOnJenkins = System.getenv("BUILD_TAG")?.startsWith("jenkins-") ?: false
}

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

sourceSets {
    integTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

dependencies {
    compileOnly "net.sourceforge.pmd:pmd-dist:6.10.0"

    testImplementation "net.sourceforge.pmd:pmd-dist:6.10.0"
    testImplementation "com.google.guava:guava:28.1-jre"
    testImplementation "org.junit.jupiter:junit-jupiter:5.5.2"
    testImplementation "org.assertj:assertj-core:3.13.2"
    testImplementation "org.mockito:mockito-core:3.1.0"
    testImplementation "org.mockito:mockito-junit-jupiter:3.1.0"

    integTestImplementation "org.assertj:assertj-core:3.13.2"
    integTestImplementation "org.junit.vintage:junit-vintage-engine:5.5.2"
    integTestImplementation("org.spockframework:spock-core:1.3-groovy-2.4") {
        exclude module: "groovy-all"
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

jar {
    manifest {
        attributes (
            "Built-By": "Gradle ${gradle.gradleVersion}",
            "Built-Date": new Date().format("yyyy-MM-dd"), // using now would destroy incremental build feature
            "Specification-Title": "gradle-cpd-plugin",
            "Specification-Version": project.version,
            "Specification-Vendor": "Andreas Schmid, service@aaschmid.de",
            "Implementation-Title": "gradle-cpd-plugin",
            "Implementation-Version": project.version,
            "Implementation-Vendor": "Andreas Schmid, service@aaschmid.de",
        )
    }
}

test {
    ignoreFailures = isBuildOnJenkins

    useJUnitPlatform()
    testLogging {
        exceptionFormat "full"
    }
}

task integTest(type: Test) {
    inputs.files jar
    shouldRunAfter "test"

    ignoreFailures = isBuildOnJenkins

    testClassesDirs = sourceSets.integTest.output.classesDirs

    classpath = sourceSets.integTest.runtimeClasspath
}
check.dependsOn integTest

jacoco {
    toolVersion = "0.8.5"
}

task jacocoMerge(type: JacocoMerge) {
    executionData tasks.withType(Test)
    dependsOn test, integTest
}

jacocoTestReport {
    executionData jacocoMerge.destinationFile
    reports {
        xml.enabled = true
        html.enabled = false
    }
    dependsOn jacocoMerge
}

gradlePlugin {
    testSourceSets sourceSets.test, sourceSets.integTest

    plugins {
        cpd {
            id = "de.aaschmid.cpd"
            implementationClass = "de.aaschmid.gradle.plugins.cpd.CpdPlugin"
        }
        // Note: comment out for "publishPlugins" because old plugin ids are no longer supported
        //       but working while downloading plugin from MavenCentral
        legacyCpd {
            id = "cpd"
            implementationClass = "de.aaschmid.gradle.plugins.cpd.CpdPlugin"
        }
    }
}

// -- sign and publish artifacts -------------------------------------------------------------------------------------

// Steps:
//   0. Set correct artifact version above, commit and create a tag prefixed with "v"
//   1. Prepare ~/.gradle/gradle.properties in order to contain signing keys and required passwords for publishing
//   2. "build"
//   3. Optional: "uploadArchives" <- should be no longer required because of bintray MavenCentral sync
//   4. "bintrayUpload"
//   5. Comment out "legacyCpd" in "gradlePlugin" closure and "publishPlugin"
//   6. Finish milestone, release on Github
//
// Note: "publish" or "publishToMavenLocal" does not work yet and for me it is quite unclear why, see also
//       * https://docs.gradle.org/current/userguide/plugins.html\#sec:plugin_markers
//       * https://docs.gradle.org/current/userguide/java_gradle_plugin.html
//       * ...

ext.isReleaseVersion = !project.version.endsWith("-SNAPSHOT")

// username and password from gradle.properties otherwise empty
if (!hasProperty("sonatypeUsername")) {
    ext.sonatypeUsername = ""
}
if (!hasProperty("sonatypePassword")) {
    ext.sonatypePassword = ""
}

tasks.withType(GenerateModuleMetadata) {
    enabled = isReleaseVersion // signing of these artifacts causes failure for snapshot versions
}

// old way for Maven Central (because new maven-publish has strange interactions with gradle-plugins plugins)
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { deployment ->
                signing.signPom(deployment)
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                // username and password from gradle.properties
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom {
                project {
                    name "gradle-cpd-plugin"
                    packaging "jar"
                    description project.description
                    url "https://github.com/aaschmid/gradle-cpd-plugin"

                    scm {
                        url "scm:git@github.com:aaschmid/gradle-cpd-plugin.git"
                        connection "scm:git@github.com:aaschmid/gradle-cpd-plugin.git"
                        developerConnection "scm:git@github.com:aaschmid/gradle-cpd-plugin.git"
                    }

                    licenses {
                        license {
                            name "The Apache Software License, Version 2.0"
                            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                            distribution "repo"
                        }
                    }

                    developers {
                        developer {
                            id "aaschmid"
                            name "Andreas Schmid"
                        }
                    }
                }
                whenConfigured { pom ->
                    pom.dependencies.removeAll(pom.dependencies.findAll{ dep -> dep.scope in [ "compile", "test" ] })
                }
            }
        }
    }
}

// new way for Bintray and plugins.gradle.org
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = "gradle-cpd-plugin"
                packaging = "jar"
                description = project.description
                url = "https://github.com/aaschmid/gradle-cpd-plugin"

                developers {
                    developer {
                        id = "aaschmid"
                        name = "Andreas Schmid"
                        email = "service@aaschmid.de"
                    }
                }

                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution = "repo"
                    }
                }

                scm {
                    connection = "scm:git@github.com:aaschmid/gradle-cpd-plugin.git"
                    developerConnection = "scm:git@github.com:aaschmid/gradle-cpd-plugin.git"
                    url = "scm:git@github.com:aaschmid/gradle-cpd-plugin.git"
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releasesRepoUrl : snapshotRepoUrl

            credentials  {
                username = sonatypeUsername
                password = sonatypePassword
            }

            metadataSources {
                gradleMetadata()
            }
        }
    }
}

if (!hasProperty("bintrayUsername")) {
    ext.bintrayUsername = ""
}
if (!hasProperty("bintrayApiKey")) {
    ext.bintrayApiKey = ""
}
if (!hasProperty("sonatypeTokenUser")) {
    ext.sonatypeTokenUser = ""
}
if (!hasProperty("sonatypeTokenPassword")) {
    ext.sonatypeTokenPassword = ""
}

bintray {
    user = bintrayUsername
    key = bintrayApiKey
    pkg {
        repo = "gradle-plugins"
        name = "gradle-cpd-plugin"
        userOrg = bintrayUsername
        licenses = ["Apache-2.0"]
        vcsUrl = "https://github.com/aaschmid/gradle-cpd-plugin.git"
        version {
            name = project.version
            desc = "Gradle plugin to find duplicate code using PMDs copy/paste detection (= CPD) in version ${project.version}."
            released  = new Date()
            vcsTag = "https://github.com/aaschmid/gradle-cpd-plugin/releases/tag/v${project.version}"
            attributes = ["gradle-plugin": "de.aaschmid.cpd:de.aaschmid:gradle-cpd-plugin"]
            gpg {
                sign = true
                // passphrase = 'passphrase' //Optional. The passphrase for GPG signing'
            }
            mavenCentralSync {
                sync = true
                user = sonatypeTokenUser
                password = sonatypeTokenPassword
                close = "0"
            }
        }
        publications = ["mavenJava"]
    }
}

// requires gradle.properties, see http://www.gradle.org/docs/current/userguide/signing_plugin.html
signing {
    required {
        isReleaseVersion && (gradle.taskGraph.hasTask("publish") || gradle.taskGraph.hasTask("uploadArchives"))
    }
    sign configurations.archives            // for "uploadArchives" and Maven Central
    sign publishing.publications.mavenJava  // for "publish" and "bintrayUpload"
}


pluginBundle {
    website = "https://github.com/aaschmid/gradle-cpd-plugin"
    vcsUrl = "https://github.com/aaschmid/gradle-cpd-plugin"

    description = "A Gradle plugin to find duplicate code using PMDs copy/paste detection (= CPD)."
    tags = [ "duplicates", "cpd", "copy-paste-detection" ]

    plugins {
        cpd {
            displayName = "Gradle CPD plugin"
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = "gradle-cpd-plugin"
        version = project.version
    }
}
